/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.stub.controller;

import com.example.stub.model.Student;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-09-23T12:25:11.085886700+05:30[Asia/Calcutta]")
@Validated
@Tag(name = "Student", description = "the Student API")
@RequestMapping("${openapi.openAPIDefinition.base-path:}")
public interface StudentApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /Student/student
     *
     * @param student  (required)
     * @return Created (status code 201)
     */
    @Operation(
        operationId = "createStudent",
        tags = { "student-controller" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Created")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/Student/student",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> createStudent(
        @Parameter(name = "Student", description = "", required = true) @Valid @RequestBody Student student
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /Student/student/{id}
     *
     * @param id  (required)
     * @return No Content (status code 204)
     */
    @Operation(
        operationId = "deleteStudent",
        tags = { "student-controller" },
        responses = {
            @ApiResponse(responseCode = "204", description = "No Content")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/Student/student/{id}"
    )
    default ResponseEntity<Void> deleteStudent(
        @Parameter(name = "id", description = "", required = true) @PathVariable("id") Integer id
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Student/student
     *
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "getAllStudents",
        tags = { "student-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "*/*", schema = @Schema(implementation = Student.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Student/student",
        produces = { "*/*" }
    )
    default ResponseEntity<List<Student>> getAllStudents(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
                    String exampleString = "{ \"address\" : [ { \"address\" : \"address\", \"id\" : 0 }, { \"address\" : \"address\", \"id\" : 0 } ], \"name\" : \"name\", \"rollno\" : 1, \"branch\" : \"branch\", \"percent\" : 6.0274563 }";
                    ApiUtil.setExampleResponse(request, "*/*", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Student/student/{id}
     *
     * @param id  (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "getStudent",
        tags = { "student-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "*/*", schema = @Schema(implementation = Student.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Student/student/{id}",
        produces = { "*/*" }
    )
    default ResponseEntity<Student> getStudent(
        @Parameter(name = "id", description = "", required = true) @PathVariable("id") Integer id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
                    String exampleString = "{ \"address\" : [ { \"address\" : \"address\", \"id\" : 0 }, { \"address\" : \"address\", \"id\" : 0 } ], \"name\" : \"name\", \"rollno\" : 1, \"branch\" : \"branch\", \"percent\" : 6.0274563 }";
                    ApiUtil.setExampleResponse(request, "*/*", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /Student/studentName/{name}
     *
     * @param name  (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "getStudentByName",
        tags = { "student-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "*/*", schema = @Schema(implementation = Student.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/Student/studentName/{name}",
        produces = { "*/*" }
    )
    default ResponseEntity<List<Student>> getStudentByName(
        @Parameter(name = "name", description = "", required = true) @PathVariable("name") String name
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
                    String exampleString = "{ \"address\" : [ { \"address\" : \"address\", \"id\" : 0 }, { \"address\" : \"address\", \"id\" : 0 } ], \"name\" : \"name\", \"rollno\" : 1, \"branch\" : \"branch\", \"percent\" : 6.0274563 }";
                    ApiUtil.setExampleResponse(request, "*/*", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /Student/student/{id}
     *
     * @param id  (required)
     * @param student  (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "updateStudent",
        tags = { "student-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "*/*", schema = @Schema(implementation = Student.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/Student/student/{id}",
        produces = { "*/*" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Student> updateStudent(
        @Parameter(name = "id", description = "", required = true) @PathVariable("id") Integer id,
        @Parameter(name = "Student", description = "", required = true) @Valid @RequestBody Student student
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
                    String exampleString = "{ \"address\" : [ { \"address\" : \"address\", \"id\" : 0 }, { \"address\" : \"address\", \"id\" : 0 } ], \"name\" : \"name\", \"rollno\" : 1, \"branch\" : \"branch\", \"percent\" : 6.0274563 }";
                    ApiUtil.setExampleResponse(request, "*/*", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
